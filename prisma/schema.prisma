
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Image {
  id     String @id 
  url    String @unique
  postId String    
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
}


model Post {
  id            String   @id @default(cuid())
  tittle        String
  description   String
  min           Int
  price         Float
  currency      String
  phone         Int
  email         String?
  address       String?
  location      String
  packing       String?
  units_packing Int?
  images        Image[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String    
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
} 


model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

